------------------PHASE 3-------------------------------

-- 1. Find the player who participated in the highest number of winning matches. Display the Player Name along with the total number of winning matches

select p.player_name,
count(m.match_id) as winning_matches
from Players p
join Matches m on p.team_id = m.winner_team_id
group by p.player_name
order by winning_matches desc
limit 1;

 -- 2 .Determine the venue with the highest number of matches played and the total fan engagements at that venue. Display the Venue , Total Matches , Total Fan Engagements.

select m.venue,
count(m.match_id) as total_matches,
count(fe.engagement_id) as total_fan_engagements
from Matches m
left join Fan_Engagement fe on m.match_id = fe.match_id
group by m.venue
order by total_matches desc
limit 1;


-- 3. Find the player who has the most fan engagements across all matches.Display the player name and the count of fan engagements .


select p.player_name,
    count(fe.engagement_id) AS total_fan_engagements
from  Players p
join Matches m on p.team_id = m.team1_id or p.team_id = m.team2_id
join Fan_Engagement fe on m.match_id = fe.match_id
group by p.player_name
order by player_name;


--4.     Write an SQL query to find out which stadium and match had the highest fan engagement. The query should return the stadium name, match date, and the total number of fan engagements for that match, ordered by the latest match date .


select  m.venue, m.match_date,
count(fe.engagement_id) as total_fan_engagements
from Matches m
join Fan_Engagement fe on m.match_id = fe.match_id
group by m.venue, m.match_date
order by total_fan_engagements desc, m.match_date desc
limit 1;


--5.Generate a report for the "Mumbai Indians" that includes details for each match they played:


SELECT m.match_date,
    CASE WHEN m.team1_id = mi.team_id THEN t2.team_name ELSE t1.team_name
    END AS opposing_team,
    m.venue, COUNT(f.engagement_id) AS total_fan_engagements,
    p.player_name AS top_player
FROM matches m
JOIN teams mi ON m.team1_id = mi.team_id OR m.team2_id = mi.team_id
LEFT JOIN teams t1 ON m.team1_id = t1.team_id
LEFT JOIN teams t2 ON m.team2_id = t2.team_id
LEFT JOIN fan_engagement f ON m.match_id = f.match_id
JOIN players p ON p.team_id = mi.team_id
WHERE mi.team_name = 'Mumbai Indians'
GROUP BY m.match_date, opposing_team, m.venue, p.player_name;